{"title":"Como Raspar dados CID Lagoa Viva","markdown":{"yaml":{"title":"Como Raspar dados CID Lagoa Viva","subtitle":"Técnicas e métodos para coleta de dados <br> revisão da literatura e estudo de caso\n","author":"Marcus Ramalho e Ariel Levy","date":"today","logo":"https://lagoaviva.net/pluginfile.php/1/theme_mb2nl/logo/1707142444/logo-lagoa-viva-v3.png","toc":false,"bibliography":"references.bib","csl":"apa.csl","incremental":true},"headingText":"O que é web scraping?","containsRefs":false,"markdown":"\n\n\n<center>\n```{mermaid}\n\ngraph LR\n    A(\"fa:fa-globe\")\n    B(\"fa:fa-laptop-code\")\n    C[\"fa:fa-database\"]\n    D[\"fa:fa-file-csv\"]\n    E[\"fa:fa-code json\"]\n    F[\"fa:fa-file-excel\"]\n    G[\"fa:fa-code xml\"]\n    H[\"fa:fa-code html\"]\n    A --> B\n    B --> D\n    B --> E\n    B --> F\n    B --> G\n    B --> H\n    D --> C\n    E --> C\n    F --> C\n    G --> C\n    H --> C\n\n\n\n\n\n```\n\n</center>\n\n\n<!-- \n![Fonte: [@webharvyWhatWebScraping]](images/paste-3.png){fig-align=\"center\"} -->\n\n## Design básico de um web scraper\n\n![Fonte: [@lotfi2021]](images/paste-1.png){fig-align=\"center\" width=\"578\"}\n\n![](images/paste-2.png){fig-align=\"center\" width=\"493\"}\n\n## Requisitos para raspar dados de um site (html parsing)\n\nConhecimento básico de HTML e CSS (para identificar os elementos que queremos coletar), tags e atributos.\n\n\n\n<details>\n\n<summary>Exemplo</summary>\n\n``` html\n<div class=\"card\">\n    <div class=\"card-body\">\n        <h5 class=\"card-title\">Lagoa Viva</h5>\n        <p class=\"card-text\">A Plataforma Educacional Lagoa Viva possui uma grande inovação para a população de Maricá: o sistema de avaliação e identificação de perfis comportamentais. Vamos entender como isso funciona?</p>\n    </div>\n</div>\n```\n\n</details>\n\nPara coletar o texto do título e do parágrafo do card precisamos identificar os elementos que contém esses textos. No caso, o título está dentro de uma tag `h5` e o parágrafo dentro de uma tag `p`.\n\n<details>\n\n<summary>Código em R para coletar esses dados:</summary>\n\n```{r}\n#| eval: false\n#| echo: true\n#| code-line-numbers: \"1|2|3|4|5|6|7|8|9|10|11\"\nlibrary(rvest)\nhtml <- \"html do card\"\nwebpage <- read_html(html)\ntitle <- webpage %>%\n    html_node(\"h5.card-title\") %>%\n    html_text(trim = TRUE)\ntext <- webpage %>%\n    html_node(\"p.card-text\") %>%\n    html_text(trim = TRUE)\nprint(title)\nprint(text)\n```\n\n</details>\n\n<details>\n\n<summary>Código em Python para coletar esses dados:</summary>\n\n```{.python code-line-numbers=\"1|2|3|4|5|6|7\"}\nfrom bs4 import BeautifulSoup\nhtml = \"html do card\"\nsoup = BeautifulSoup(html, 'html.parser')\ntitle = soup.find('h5', class_='card-title').text\ntext = soup.find('p', class_='card-text').text\nprint(title)\nprint(text)\n```\n\n</details>\n\n\n## Métodos: DOM parsing (Document Object Model)\n\n<center>\n\n```{mermaid}\ngraph TB\n    A[HTML]\n    B[HEAD]\n    C[BODY]\n    D[DIV class='card']\n    E[Text]\n    F[DIV class='card-body']\n    G[Text]\n    H[H5 class='card-title']\n    I[Text: Lagoa Viva]\n    J[Text]\n    K[P class='card-text']\n    L[Text: A Plataforma ...]\n    M[Text]\n    N[Text]\n    A --> B\n    A --> C\n    C --> D\n    D --> E\n    D --> F\n    F --> G\n    F --> H\n    H --> I\n    F --> J\n    F --> K\n    K --> L\n    K --> M\n    K --> N\n```\n\n</center>\n\nOrganiza o documento em uma estrutura de árvore - DOM: <https://livedom.validator.nu/>\n\n## Métodos: Regular Expression (Regex) e LLM's (Large Language Models)\n\nRegular expressions são padrões utilizados para encontrar determinadas combinações de caracteres dentro de strings. Exemplo: regex: `r'\\d+'` encontra todas as sequências de números em uma string.\n\n<center>\n\n![](images/paste-6.png)\n\n</center>\n\nModelos de linguagem aprendem a estrutura e padrões de uma língua natural. Exemplo: Gemini, GPT-4, etc... Uma aplicação de LLM's é a extração de informações de textos, como entidades nomeadas, relações ou estruturas de páginas web.\n\n## Outros métodos\n\n- XPath (XML Path Language)\n- Vertical Aggregation Platforms (VAP)\n- Semantic annotation recognizing\n- Computer Vision Web Page Analyzer\n\n## API`s\n\n- Segurança e confiabilidade\n- Facilidade de uso\n- Documentação\n- Limites de requisições e preços\n- Autenticação\n- Pacotes Python: `requests`(Faz requisições HTTP e HTTPS. ) e `asyncio`(Permite requisições assíncronas.)\n- Pacotes R equivalentes: `httr` e `async`\n\n\n## Aplicações de web scraping com Python e R\n\n\n\n## Referências","srcMarkdownNoYaml":"\n\n## O que é web scraping?\n\n<center>\n```{mermaid}\n\ngraph LR\n    A(\"fa:fa-globe\")\n    B(\"fa:fa-laptop-code\")\n    C[\"fa:fa-database\"]\n    D[\"fa:fa-file-csv\"]\n    E[\"fa:fa-code json\"]\n    F[\"fa:fa-file-excel\"]\n    G[\"fa:fa-code xml\"]\n    H[\"fa:fa-code html\"]\n    A --> B\n    B --> D\n    B --> E\n    B --> F\n    B --> G\n    B --> H\n    D --> C\n    E --> C\n    F --> C\n    G --> C\n    H --> C\n\n\n\n\n\n```\n\n</center>\n\n\n<!-- \n![Fonte: [@webharvyWhatWebScraping]](images/paste-3.png){fig-align=\"center\"} -->\n\n## Design básico de um web scraper\n\n![Fonte: [@lotfi2021]](images/paste-1.png){fig-align=\"center\" width=\"578\"}\n\n![](images/paste-2.png){fig-align=\"center\" width=\"493\"}\n\n## Requisitos para raspar dados de um site (html parsing)\n\nConhecimento básico de HTML e CSS (para identificar os elementos que queremos coletar), tags e atributos.\n\n\n\n<details>\n\n<summary>Exemplo</summary>\n\n``` html\n<div class=\"card\">\n    <div class=\"card-body\">\n        <h5 class=\"card-title\">Lagoa Viva</h5>\n        <p class=\"card-text\">A Plataforma Educacional Lagoa Viva possui uma grande inovação para a população de Maricá: o sistema de avaliação e identificação de perfis comportamentais. Vamos entender como isso funciona?</p>\n    </div>\n</div>\n```\n\n</details>\n\nPara coletar o texto do título e do parágrafo do card precisamos identificar os elementos que contém esses textos. No caso, o título está dentro de uma tag `h5` e o parágrafo dentro de uma tag `p`.\n\n<details>\n\n<summary>Código em R para coletar esses dados:</summary>\n\n```{r}\n#| eval: false\n#| echo: true\n#| code-line-numbers: \"1|2|3|4|5|6|7|8|9|10|11\"\nlibrary(rvest)\nhtml <- \"html do card\"\nwebpage <- read_html(html)\ntitle <- webpage %>%\n    html_node(\"h5.card-title\") %>%\n    html_text(trim = TRUE)\ntext <- webpage %>%\n    html_node(\"p.card-text\") %>%\n    html_text(trim = TRUE)\nprint(title)\nprint(text)\n```\n\n</details>\n\n<details>\n\n<summary>Código em Python para coletar esses dados:</summary>\n\n```{.python code-line-numbers=\"1|2|3|4|5|6|7\"}\nfrom bs4 import BeautifulSoup\nhtml = \"html do card\"\nsoup = BeautifulSoup(html, 'html.parser')\ntitle = soup.find('h5', class_='card-title').text\ntext = soup.find('p', class_='card-text').text\nprint(title)\nprint(text)\n```\n\n</details>\n\n\n## Métodos: DOM parsing (Document Object Model)\n\n<center>\n\n```{mermaid}\ngraph TB\n    A[HTML]\n    B[HEAD]\n    C[BODY]\n    D[DIV class='card']\n    E[Text]\n    F[DIV class='card-body']\n    G[Text]\n    H[H5 class='card-title']\n    I[Text: Lagoa Viva]\n    J[Text]\n    K[P class='card-text']\n    L[Text: A Plataforma ...]\n    M[Text]\n    N[Text]\n    A --> B\n    A --> C\n    C --> D\n    D --> E\n    D --> F\n    F --> G\n    F --> H\n    H --> I\n    F --> J\n    F --> K\n    K --> L\n    K --> M\n    K --> N\n```\n\n</center>\n\nOrganiza o documento em uma estrutura de árvore - DOM: <https://livedom.validator.nu/>\n\n## Métodos: Regular Expression (Regex) e LLM's (Large Language Models)\n\nRegular expressions são padrões utilizados para encontrar determinadas combinações de caracteres dentro de strings. Exemplo: regex: `r'\\d+'` encontra todas as sequências de números em uma string.\n\n<center>\n\n![](images/paste-6.png)\n\n</center>\n\nModelos de linguagem aprendem a estrutura e padrões de uma língua natural. Exemplo: Gemini, GPT-4, etc... Uma aplicação de LLM's é a extração de informações de textos, como entidades nomeadas, relações ou estruturas de páginas web.\n\n## Outros métodos\n\n- XPath (XML Path Language)\n- Vertical Aggregation Platforms (VAP)\n- Semantic annotation recognizing\n- Computer Vision Web Page Analyzer\n\n## API`s\n\n- Segurança e confiabilidade\n- Facilidade de uso\n- Documentação\n- Limites de requisições e preços\n- Autenticação\n- Pacotes Python: `requests`(Faz requisições HTTP e HTTPS. ) e `asyncio`(Permite requisições assíncronas.)\n- Pacotes R equivalentes: `httr` e `async`\n\n\n## Aplicações de web scraping com Python e R\n\n\n\n## Referências"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","include-in-header":{"text":"<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n"},"css":["styles.css"],"toc":false,"incremental":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.4.549","auto-stretch":true,"mermaid":{"theme":"neutral"},"theme":"moon","title":"Como Raspar dados CID Lagoa Viva","subtitle":"Técnicas e métodos para coleta de dados <br> revisão da literatura e estudo de caso\n","author":"Marcus Ramalho e Ariel Levy","date":"today","logo":"https://lagoaviva.net/pluginfile.php/1/theme_mb2nl/logo/1707142444/logo-lagoa-viva-v3.png","bibliography":["references.bib"],"csl":"apa.csl"}}},"projectFormats":["revealjs"]}