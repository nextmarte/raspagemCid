[
  {
    "objectID": "index.html#design-básico-de-um-web-scraper",
    "href": "index.html#design-básico-de-um-web-scraper",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Design básico de um web scraper",
    "text": "Design básico de um web scraper\n\n\n\nFonte: (Lotfi et al., 2021)"
  },
  {
    "objectID": "index.html#o-que-é-web-scraping",
    "href": "index.html#o-que-é-web-scraping",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "O que é web scraping?",
    "text": "O que é web scraping?\n\n\n\n\n\n\ngraph LR\n    A(\"fa:fa-globe\")\n    B(\"fa:fa-laptop-code\")\n    C[\"fa:fa-database\"]\n    D[\"fa:fa-file-csv\"]\n    E[\"fa:fa-code json\"]\n    F[\"fa:fa-file-excel\"]\n    G[\"fa:fa-code xml\"]\n    H[\"fa:fa-code html\"]\n    A --&gt; B\n    B --&gt; D\n    B --&gt; E\n    B --&gt; F\n    B --&gt; G\n    B --&gt; H\n    D --&gt; C\n    E --&gt; C\n    F --&gt; C\n    G --&gt; C\n    H --&gt; C"
  },
  {
    "objectID": "index.html#referências",
    "href": "index.html#referências",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Referências",
    "text": "Referências\n\n\n\n\n\n\n\n\n\nLotfi, C., Srinivasan, S., Ertz, M., & Latrous, I. (2021). Web scraping techniques and applications: A literature review (pp. 381–394). Soft Computing Research Society. https://doi.org/10.52458/978-93-91842-08-6-38"
  },
  {
    "objectID": "index.html#requisitos-para-web-scraping",
    "href": "index.html#requisitos-para-web-scraping",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Requisitos para web scraping",
    "text": "Requisitos para web scraping\nConhecimento básico de HTML e CSS (para identificar os elementos que queremos coletar)\nExemplo de trecho de código html que pode ser raspado:\n\n&lt;div class=\"card\"&gt;\n    &lt;div class=\"card-body\"&gt;\n        &lt;h5 class=\"card-title\"&gt;Lagoa Viva&lt;/h5&gt;\n        &lt;p class=\"card-text\"&gt;A Plataforma Educacional Lagoa Viva possui uma grande inovação para a população de Maricá: o sistema de avaliação e identificação de perfis comportamentais. Vamos entender como isso funciona?&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\nPara coletar o texto do título e do parágrafo do card precisamos identificar os elementos que contém esses textos. No caso, o título está dentro de uma tag h5 e o parágrafo dentro de uma tag p.\nExemplo simples de codigo em Python para coletar esses dados e salvar em uma variável:\nfrom bs4 import BeautifulSoup\n\nhtml = \"html do card\"\n\nsoup = BeautifulSoup(html, 'html.parser')\n\ntitle = soup.find('h5', class_='card-title').text\ntext = soup.find('p', class_='card-text\n\nprint(title)\n\nprint(text)"
  },
  {
    "objectID": "index.html#outros-requisitos",
    "href": "index.html#outros-requisitos",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Outros requisitos",
    "text": "Outros requisitos\nTags HTML:\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Lagoa Viva&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"header\"&gt;\n        &lt;h1&gt;Lagoa Viva&lt;/h1&gt;\n        &lt;p&gt;Bem-vindo ao site da Lagoa Viva.&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;div id=\"content\"&gt;\n        &lt;h2&gt;Notícias&lt;/h2&gt;\n        &lt;p&gt;Confira as últimas notícias sobre a Lagoa Viva.&lt;/p&gt;\n        &lt;a href=\"https://lagoaviva.net/noticias\"&gt;Leia mais&lt;/a&gt;\n    &lt;/div&gt;\n    &lt;div id=\"footer\"&gt;\n        &lt;img src=\"https://lagoaviva.net/logo.png\" alt=\"Logo da Lagoa Viva\"&gt;\n        &lt;span&gt;© 2024 Lagoa Viva&lt;/span&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nAtributos: São usados para fornecer informações adicionais sobre elementos HTML.\n\nclass, id, src, href, etc."
  },
  {
    "objectID": "index.html#outros-requisitos-.font-size30",
    "href": "index.html#outros-requisitos-.font-size30",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Outros requisitos {.font-size=30}",
    "text": "Outros requisitos {.font-size=30}\nTags HTML: São a base de qualquer página da web.\nExemplos: div, span, a, img, p, h1 a h6, etc.\nAtributos: São usados para fornecer informações adicionais sobre elementos HTML.\nExemplos: class, id, src, href, etc."
  },
  {
    "objectID": "index.html#outros-requisitos-style-font-size30",
    "href": "index.html#outros-requisitos-style-font-size30",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Outros requisitos {style: font-size=30}",
    "text": "Outros requisitos {style: font-size=30}\nTags HTML: São a base de qualquer página da web.\nExemplos: div, span, a, img, p, h1 a h6, etc.\nAtributos: São usados para fornecer informações adicionais sobre elementos HTML.\nExemplos: class, id, src, href, etc."
  },
  {
    "objectID": "index.html#requisitos-para-raspar-dados-de-um-site-html-parsing",
    "href": "index.html#requisitos-para-raspar-dados-de-um-site-html-parsing",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Requisitos para raspar dados de um site (html parsing)",
    "text": "Requisitos para raspar dados de um site (html parsing)\nConhecimento básico de HTML e CSS (para identificar os elementos que queremos coletar), tags e atributos.\n\n\nExemplo\n\n&lt;div class=\"card\"&gt;\n    &lt;div class=\"card-body\"&gt;\n        &lt;h5 class=\"card-title\"&gt;Lagoa Viva&lt;/h5&gt;\n        &lt;p class=\"card-text\"&gt;A Plataforma Educacional Lagoa Viva possui uma grande inovação para a população de Maricá: o sistema de avaliação e identificação de perfis comportamentais. Vamos entender como isso funciona?&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\nPara coletar o texto do título e do parágrafo do card precisamos identificar os elementos que contém esses textos. No caso, o título está dentro de uma tag h5 e o parágrafo dentro de uma tag p.\n\n\nCódigo em R para coletar esses dados:\n\n\nlibrary(rvest)\nhtml &lt;- \"html do card\"\nwebpage &lt;- read_html(html)\ntitle &lt;- webpage %&gt;%\n    html_node(\"h5.card-title\") %&gt;%\n    html_text(trim = TRUE)\ntext &lt;- webpage %&gt;%\n    html_node(\"p.card-text\") %&gt;%\n    html_text(trim = TRUE)\n\n\n\n\nCódigo em Python para coletar esses dados:\n\nfrom bs4 import BeautifulSoup\nhtml = \"html do card\"\nsoup = BeautifulSoup(html, 'html.parser')\ntitle = soup.find('h5', class_='card-title').text\ntext = soup.find('p', class_='card-text').text"
  },
  {
    "objectID": "index.html#outros-métodos-de-coleta-de-dados",
    "href": "index.html#outros-métodos-de-coleta-de-dados",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Outros métodos de coleta de dados:",
    "text": "Outros métodos de coleta de dados:\nDOM parsing (Document Object Model):\n\n\n\n\n\n\ngraph TB\n    A[html]\n    B[head]\n    C[body]\n    D[h1]\n    E[p]\n    A --&gt; B\n    A --&gt; C\n    B -.-&gt; C\n    C --&gt; D\n    C --&gt; E\n\n\n\n\n\n\n\nInterface usada para organizar os diferentes tipos de elementos em um documento HTML em uma estrutura de árvore, facilitando a navegação e manipulação dos elementos (Lotfi et al., 2021)"
  },
  {
    "objectID": "index.html#métodos",
    "href": "index.html#métodos",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Métodos :",
    "text": "Métodos :\nDOM parsing (Document Object Model):\n\n\n\n\n\n\ngraph TB\n    A[html]\n    B[head]\n    C[body]\n    D[h1]\n    E[p]\n    A --&gt; B\n    A --&gt; C\n    B -.-&gt; C\n    C --&gt; D\n    C --&gt; E\n\n\n\n\n\n\n\nInterface (API) usada para organizar os diferentes tipos de elementos em um documento HTML ou XML em uma estrutura de árvore, facilitando a navegação e manipulação dos elementos (Lotfi et al., 2021). Exemplo de site para visualizar arvores DOM: https://livedom.validator.nu/"
  },
  {
    "objectID": "index.html#exemplo-dom-parsing-com-python-na-pagina-httpsser.uff.br",
    "href": "index.html#exemplo-dom-parsing-com-python-na-pagina-httpsser.uff.br",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Exemplo DOM parsing com python na pagina https://ser.uff.br/",
    "text": "Exemplo DOM parsing com python na pagina https://ser.uff.br/"
  },
  {
    "objectID": "index.html#ferramentas-dom-parsing-document-object-model",
    "href": "index.html#ferramentas-dom-parsing-document-object-model",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Ferramentas: DOM parsing (Document Object Model)",
    "text": "Ferramentas: DOM parsing (Document Object Model)\n\n\n\n\n\n\ngraph TB\n    A[html]\n    B[head]\n    C[body]\n    D[h1]\n    E[p]\n    A --&gt; B\n    A --&gt; C\n    C --&gt; D\n    C --&gt; E\n\n\n\n\n\n\n\nInterface (API) usada para organizar os diferentes tipos de elementos em um documento HTML ou XML em uma estrutura de árvore, facilitando a navegação e manipulação dos elementos (Lotfi et al., 2021). Exemplo de site para visualizar arvores DOM: https://livedom.validator.nu/"
  },
  {
    "objectID": "index.html#ferramentas-regular-expression-regex",
    "href": "index.html#ferramentas-regular-expression-regex",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Ferramentas: Regular Expression (Regex)",
    "text": "Ferramentas: Regular Expression (Regex)"
  },
  {
    "objectID": "index.html#métodos-dom-parsing-document-object-model",
    "href": "index.html#métodos-dom-parsing-document-object-model",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Métodos: DOM parsing (Document Object Model)",
    "text": "Métodos: DOM parsing (Document Object Model)\n\n\n\n\n\n\ngraph TB\n    A[HTML]\n    B[HEAD]\n    C[BODY]\n    D[DIV class='card']\n    E[Text]\n    F[DIV class='card-body']\n    G[Text]\n    H[H5 class='card-title']\n    I[Text: Lagoa Viva]\n    J[Text]\n    K[P class='card-text']\n    L[Text: A Plataforma ...]\n    M[Text]\n    N[Text]\n    A --&gt; B\n    A --&gt; C\n    C --&gt; D\n    D --&gt; E\n    D --&gt; F\n    F --&gt; G\n    F --&gt; H\n    H --&gt; I\n    F --&gt; J\n    F --&gt; K\n    K --&gt; L\n    K --&gt; M\n    K --&gt; N\n\n\n\n\n\n\n\nOrganiza o documento em uma estrutura de árvore - DOM: https://livedom.validator.nu/"
  },
  {
    "objectID": "index.html#métodos-regular-expression-regex-vs-llms-language-models",
    "href": "index.html#métodos-regular-expression-regex-vs-llms-language-models",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Métodos: Regular Expression (Regex) vs LLM’s (Language Models)",
    "text": "Métodos: Regular Expression (Regex) vs LLM’s (Language Models)\nRegular expressions são padrões utilizados para encontrar determinadas combinações de caracteres dentro de strings. Exemplo: regex: r'\\d+' encontra todas as sequências de números em uma string.\n\n\n\nModelos de linguagem que aprendem a estrutura e padrões de uma língua natural. Exemplo: Gemini, GPT-4, etc… Uma aplicação de LLM’s é a extração de informações de textos, como entidades nomeadas, relações, etc,"
  },
  {
    "objectID": "index.html#outros-métodos",
    "href": "index.html#outros-métodos",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Outros métodos",
    "text": "Outros métodos\n\nXPath (XML Path Language)\nVertical Aggregation Platforms (VAP)\nSemantic annotation recognizing\nComputer Vision Web Page Analyzer"
  },
  {
    "objectID": "index.html#métodos-regular-expression-regex-e-llms-large-language-models",
    "href": "index.html#métodos-regular-expression-regex-e-llms-large-language-models",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Métodos: Regular Expression (Regex) e LLM’s (Large Language Models)",
    "text": "Métodos: Regular Expression (Regex) e LLM’s (Large Language Models)\nRegular expressions são padrões utilizados para encontrar determinadas combinações de caracteres dentro de strings. Exemplo: regex: r'\\d+' encontra todas as sequências de números em uma string.\n\n\n\nModelos de linguagem aprendem a estrutura e padrões de uma língua natural. Exemplo: Gemini, GPT-4, etc… Uma aplicação de LLM’s é a extração de informações de textos, como entidades nomeadas, relações ou estruturas de páginas web."
  },
  {
    "objectID": "index.html#aplicações-de-web-scraping-com-python-e-r",
    "href": "index.html#aplicações-de-web-scraping-com-python-e-r",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Aplicações de web scraping com Python e R",
    "text": "Aplicações de web scraping com Python e R"
  },
  {
    "objectID": "index.html#apis",
    "href": "index.html#apis",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "API`s",
    "text": "API`s\n\nSegurança e confiabilidade\nFacilidade de uso\nDocumentação\nLimites de requisições e preços\nAutenticação\nPacotes Python: requests(Faz requisições HTTP e HTTPS. ) e asyncio(Permite requisições assíncronas.)\nPacotes R equivalentes: httr e async"
  },
  {
    "objectID": "index.html#web-crawling",
    "href": "index.html#web-crawling",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Web Crawling",
    "text": "Web Crawling\n\nColeta de dados de múltiplas páginas de um site\nTorna o processo de coleta de dados mais eficiente\nFerramentas: Scrapy, Selenium, Puppeteer, etc…\nPossíveis problemas: bloqueio de IP, captchas, etc…"
  },
  {
    "objectID": "index.html#pipeline-de-coleta-de-dados",
    "href": "index.html#pipeline-de-coleta-de-dados",
    "title": "Como Raspar dados CID Lagoa Viva",
    "section": "Pipeline de coleta de dados",
    "text": "Pipeline de coleta de dados\n\nColeta de dados: web scraping, web crawling, API’s, etc…\nLimpeza (gargalo do processo)\n\nPython: pandas, re\nR: rvest, stringr, tidyverse,\n\nArmazenamento\nPara raspagens rápidas e simples: R\nPara raspagens mais complexas e crawlers: Python"
  }
]